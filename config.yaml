# DocGenAI Configuration File
# Comprehensive configuration for code documentation generation

# AI Model Configuration
model:
  # Model selection (platform-aware)
  # macOS: Uses MLX-optimized model automatically
  # Linux/Windows: Uses standard transformers model

  # Model names (automatically selected based on platform)
  mlx_model: "mlx-community/DeepSeek-Coder-V2-Lite-Instruct-8bit"     # macOS (Apple Silicon)
  transformers_model: "TechxGenus/DeepSeek-Coder-V2-Lite-Instruct-AWQ"   # Linux/Windows - AWQ 4-bit quantized

  # Generation parameters
  temperature: 0.1
  max_tokens: 4000
  top_p: 0.9
  min_p: 0.05
  top_k: 50
  do_sample: true          # Enable sampling vs greedy decoding

  # Quantization settings (non-MLX platforms)
  quantization: "4bit"     # Options: "none", "8bit", "4bit"
  load_in_4bit: true
  load_in_8bit: false

  # Model caching
  session_cache: true      # Keep model in memory between generations
  cache_model_files: true  # Cache downloaded model files

  # Hardware optimization
  device_map: "auto"       # Automatic device mapping for multi-GPU
  torch_dtype: "auto"      # Automatic precision selection
  trust_remote_code: true  # Required for DeepSeek models

# Caching Configuration
cache:
  enabled: true                    # Enable all caching features
  generation_cache: true           # Cache generation results
  model_cache: true               # Cache model instances

  # Cache directories
  cache_dir: ".cache/docgenai"     # Main cache directory
  model_cache_dir: ".cache/models" # Model files cache

  # Cache limits
  max_cache_size_mb: 2000         # Maximum total cache size
  max_generation_cache_mb: 500    # Max size for generation cache
  max_model_cache_mb: 1500        # Max size for model cache

  # Cache TTL (time-to-live)
  generation_ttl_hours: 24        # How long to keep generation cache
  model_ttl_hours: 168           # How long to keep model cache (1 week)

  # Cache cleanup
  auto_cleanup: true              # Automatically clean old cache
  cleanup_on_startup: false      # Clean cache on application start

# Output Configuration
output:
  # Output directory and file naming
  dir: "output"                           # Default output directory
  filename_template: "{name}_documentation.md"  # Output filename pattern

  # Content options
  include_architecture: true             # Include architecture analysis
  include_code_stats: true              # Include code statistics
  include_dependencies: true            # Include dependency analysis
  include_examples: true                # Include usage examples
  include_diagrams: false               # Include Mermaid diagrams (future)

  # File organization
  create_subdirs: true                  # Create subdirectories for organization
  preserve_structure: true             # Preserve source directory structure

  # Format options
  markdown_style: "github"             # Markdown flavor
  code_block_language: "auto"          # Auto-detect code language
  table_format: "github"               # Table format style

# Template Configuration
templates:
  # Template directories and files
  dir: "src/docgenai/templates"              # Template directory
  doc_template: "default_doc_template.md"    # Main documentation template
  style_guide: "default_style_guide.md"     # Style guide template
  summary_template: "directory_summary.md"   # Directory summary template

  # Template customization
  custom_templates_dir: "templates"         # User custom templates
  allow_custom_templates: true              # Enable custom templates

  # Template variables
  author: ""                               # Default author name
  organization: ""                         # Default organization
  project_name: ""                        # Default project name
  version: "1.0.0"                        # Default version

# Generation Configuration
generation:
  # File processing
  file_patterns:
    - "*.py"      # Python
    - "*.js"      # JavaScript
    - "*.ts"      # TypeScript
    - "*.jsx"     # React JSX
    - "*.tsx"     # React TypeScript
    - "*.cpp"     # C++
    - "*.cc"      # C++
    - "*.cxx"     # C++
    - "*.c"       # C
    - "*.h"       # C/C++ headers
    - "*.hpp"     # C++ headers
    - "*.java"    # Java
    - "*.go"      # Go
    - "*.rs"      # Rust
    - "*.rb"      # Ruby
    - "*.php"     # PHP
    - "*.cs"      # C#
    - "*.swift"   # Swift
    - "*.kt"      # Kotlin
    - "*.scala"   # Scala
    - "*.r"       # R
    - "*.R"       # R

  # Processing options
  max_file_size_mb: 10                # Maximum file size to process
  skip_binary_files: true             # Skip binary files
  skip_generated_files: true          # Skip generated files
  skip_test_files: false              # Process test files

  # Parallel processing
  max_workers: 4                      # Maximum parallel workers
  batch_size: 5                       # Files per batch

  # Content analysis
  analyze_imports: true               # Analyze import statements
  analyze_functions: true             # Analyze function definitions
  analyze_classes: true               # Analyze class definitions
  analyze_complexity: true            # Analyze code complexity

  # Documentation depth
  detail_level: "medium"              # Options: "brief", "medium", "detailed"
  include_private_methods: false      # Document private methods
  include_internal_classes: false    # Document internal classes

# Logging Configuration
logging:
  # Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: "INFO"                       # Default log level
  verbose_level: "DEBUG"              # Log level when --verbose is used

  # Log formatting
  format: "%(message)s"               # Simple format with emojis
  verbose_format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # Log output
  console: true                       # Log to console
  file: false                         # Log to file
  log_file: "logs/docgenai.log"      # Log file path

  # Log rotation
  max_log_size_mb: 10                # Maximum log file size
  backup_count: 3                    # Number of backup log files

# Environment Variables
# These can be set as environment variables with DOCGENAI_ prefix
# Example: DOCGENAI_MODEL__TEMPERATURE=0.8
# Example: DOCGENAI_CACHE__ENABLED=false
# Example: DOCGENAI_OUTPUT__DIR=/custom/output

# Security Configuration
security:
  # Model security
  allow_remote_code: true            # Allow remote code execution in models
  verify_ssl: true                   # Verify SSL certificates

  # File security
  restrict_file_access: false        # Restrict file access to specific directories
  allowed_directories: []            # List of allowed directories (if restricted)

  # Network security
  proxy_url: ""                      # HTTP proxy URL
  timeout_seconds: 300               # Network timeout

# Performance Configuration
performance:
  # Memory management
  max_memory_usage_gb: 16           # Maximum memory usage
  memory_cleanup_threshold: 0.8     # Memory cleanup threshold

  # Processing limits
  max_concurrent_files: 10          # Maximum files processed concurrently
  processing_timeout_minutes: 30    # Timeout for single file processing

  # Model optimization
  use_cpu_offload: false            # Offload model to CPU when not in use
  use_disk_offload: false           # Offload model to disk when not in use
  optimize_for_speed: true          # Optimize for speed vs quality

  # Hardware detection
  auto_detect_gpu: true             # Automatically detect and use GPU
  prefer_gpu: true                  # Prefer GPU over CPU when available

# Integration Configuration
integrations:
  # Git integration
  git:
    enabled: true                   # Enable git integration
    include_commit_info: true       # Include commit information
    include_branch_info: true       # Include branch information
    include_author_info: false      # Include author information

  # IDE integration
  vscode:
    enabled: false                  # Enable VS Code integration
    config_path: ".vscode/settings.json"

  # CI/CD integration
  github_actions:
    enabled: false                  # Enable GitHub Actions integration
    workflow_path: ".github/workflows/docs.yml"

  # Documentation platforms
  gitbook:
    enabled: false                  # Enable GitBook integration
    api_key: ""                     # GitBook API key (use env var)

  confluence:
    enabled: false                  # Enable Confluence integration
    base_url: ""                    # Confluence base URL
    api_key: ""                     # Confluence API key (use env var)

# Experimental Features
experimental:
  # Future features (not yet implemented)
  interactive_mode: false           # Interactive documentation tuning
  ai_suggestions: false             # AI-powered improvement suggestions
  code_refactoring_hints: false     # Suggest code improvements
  documentation_scoring: false      # Score documentation quality
  auto_update_docs: false          # Automatically update outdated docs

  # Advanced AI features
  multi_model_consensus: false      # Use multiple models for consensus
  custom_prompt_engineering: false  # Allow custom prompt templates
  domain_specific_training: false   # Domain-specific model fine-tuning
